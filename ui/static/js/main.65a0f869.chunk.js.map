{"version":3,"sources":["config.js","login/Login.js","App.js","index.js"],"names":["BASE_URL","Login","props","login","bind","register","state","loginData","registerData","status","isLoading","this","setState","prevState","axios","post","email","userName","password","then","response","body","data","message","error","user_name","nextProps","nextState","className","type","onChange","event","target","value","onClick","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65a0f869.chunk.js","sourcesContent":["export const BASE_URL = \"http://localhost\"","import React from 'react'\nimport './Login.css'\nimport axios from 'axios'\nimport { BASE_URL } from '../config'\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.login = this.login.bind(this);\n        this.register = this.register.bind(this);\n        this.state = { loginData: {}, registerData: {}, status: null, isLoading: false }\n    }\n\n    login() {\n        this.setState((prevState, props) => ({\n            loginData: prevState.loginData,\n            registerData: prevState.registerData,\n            status: null,\n            isLoading: true,\n        }))\n        axios.post(`${BASE_URL}/login`, {\n            email: this.state.loginData.userName,\n            password: this.state.loginData.password\n        }).then(response => {\n            let body = response.data;\n            this.setState((prevState, props) => ({\n                loginData: prevState.loginData,\n                registerData: prevState.registerData,\n                status: { message: body.message, error: body.status === \"ok\" },\n                isLoading: false,\n            }))\n        })\n    }\n\n    register() {\n        this.setState((prevState, props) => ({\n            loginData: prevState.loginData,\n            registerData: prevState.registerData,\n            status: null,\n            isLoading: true,\n        }))\n        axios.post(`${BASE_URL}/register`, {\n            user_name: this.state.registerData.userName,\n            email: this.state.registerData.email,\n            password: this.state.registerData.password\n        }).then(response => {\n            let body = response.data;\n            this.setState((prevState, props) => ({\n                loginData: prevState.loginData,\n                registerData: prevState.registerData,\n                status: { message: body.message, error: body.status === \"ok\" },\n                isLoading: false,\n            }))\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"login-container\">\n                <div className=\"login-field-container\">\n                    <span className=\"login-label\">Email:</span>\n                    <input type=\"text\" className=\"login-input\" onChange={(event) => {\n                        this.setState((prevState, props) => ({\n                            registerData: {\n                                email: event.target.value,\n                                password: prevState.registerData.password,\n                                userName: prevState.registerData.userName\n                            },\n                            loginData: prevState.loginData,\n                            status: prevState.status,\n                            isLoading: prevState.isLoading\n                        }))\n                    }} />\n\n                    <span className=\"login-label\">Password:</span>\n                    <input type=\"password\" className=\"login-input\" onChange={(event) => {\n                        this.setState((prevState, props) => ({\n                            registerData: {\n                                email: prevState.registerData.email,\n                                password: event.target.value,\n                                userName: prevState.registerData.userName\n                            },\n                            loginData: prevState.loginData,\n                            status: prevState.status,\n                            isLoading: prevState.isLoading\n                        }))\n                    }} />\n\n                    <span className=\"login-label\">User Name:</span>\n                    <input type=\"text\" className=\"login-input\" onChange={(event) => {\n                        this.setState((prevState, props) => ({\n                            registerData: {\n                                email: prevState.registerData.email,\n                                password: prevState.registerData.password,\n                                userName: event.target.value\n                            },\n                            loginData: prevState.loginData,\n                            status: prevState.status,\n                            isLoading: prevState.isLoading\n                        }))\n                    }} />\n\n                    <button className=\"login-button\" onClick={(event) => { this.register() }}>Register</button>\n                </div>\n\n                <div className=\"login-field-container\">\n                    <span className=\"login-label\">Email:</span>\n                    <input type=\"text\" className=\"login-input\" onChange={(event) => {\n                        this.setState((prevState, props) => ({\n                            loginData: {\n                                email: event.target.email,\n                                password: prevState.loginData.password,\n                            },\n                            registerData: prevState.registerData,\n                            status: prevState.status,\n                            isLoading: prevState.isLoading\n                        }))\n                    }} />\n\n                    <span className=\"login-label\">Password:</span>\n                    <input type=\"password\" className=\"login-input\" onChange={(event) => {\n                        this.setState((prevState, props) => ({\n                            loginData: {\n                                email: prevState.loginData.email,\n                                password: event.target.value,\n                            },\n                            registerData: prevState.registerData,\n                            status: prevState.status,\n                            isLoading: prevState.isLoading\n                        }))\n                    }} />\n\n                    <button className=\"login-button\" onClick={(event) => { this.login() }}>Login</button>\n                </div>\n                <div className=\"progress-bar\"></div>\n            </div>\n\n        )\n    }\n\n\n}","import React from 'react'\nimport Login from './login/Login'\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Login />\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}